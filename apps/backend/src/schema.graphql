type Product {
  id: Int!
  title: String!
  price: String!
  description: String!
  image: String!
}

type Category {
  code: String!
  products: [Product!]!
}

type ShopCartItemProduct {
  id: Int!
  title: String!
  price: Int!
  image: String!
}

type ShopCartItem {
  product: ShopCartItemProduct!
  quantity: Int!
}

type ShopCart {
  id: String!
  userId: String!
  items: [ShopCartItem!]!
  totalUnits: Int!
  totalAmount: Int!
}


type Query {
  categories: [Category!]!
  category(categoryCode: String): Category!
  product(productId: Int!): Product
  cart: ShopCart @authRequired
}

input NewShopCartItem {
  productId: Int!
  quantity: Int!
}

type Mutation {
  addProductToCart(cartItem: NewShopCartItem): ShopCart @authRequired
  removeProductFromCart(productId: Int!): ShopCart @authRequired
  checkout: String! @authRequired
}
